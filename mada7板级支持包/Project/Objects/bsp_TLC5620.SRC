; .\Objects\bsp_TLC5620.SRC generated from: ..\Libraries\FWlib\src\bsp_TLC5620.c
; COMPILER INVOKED BY:
;        E:\KEILMDK\MDK5\C51\BIN\C51.EXE ..\Libraries\FWlib\src\bsp_TLC5620.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Libraries\CMSIS\startup;..\Libraries\CMSIS;..\Libraries\FWlib\src;..\Libraries\FWlib\inc;..\Libraries\FWlib;..\User) DEBUG OBJECTEXTEND PRINT(.\Listings\bsp_TLC5620.lst) TABS(2) SRC(.\Objects\bsp_TLC5620.SRC)

$NOMOD51

NAME	BSP_TLC5620

CCF2	BIT	0D8H.2
P1M0	DATA	092H
P0M1	DATA	093H
P2M0	DATA	096H
P1M1	DATA	091H
P0	DATA	080H
P3M0	DATA	0B2H
P2M1	DATA	095H
P1	DATA	090H
P4M0	DATA	0B4H
P3M1	DATA	0B1H
P2	DATA	0A0H
WKTCH	DATA	0ABH
P5M0	DATA	0CAH
P4M1	DATA	0B3H
P3	DATA	0B0H
P6M0	DATA	0CCH
P5M1	DATA	0C9H
P4	DATA	0C0H
AC	BIT	0D0H.6
PWMIF	DATA	0F6H
P7M0	DATA	0E2H
P6M1	DATA	0CBH
P5	DATA	0C8H
EA	BIT	0A8H.7
P7M1	DATA	0E1H
P6	DATA	0E8H
WKTCL	DATA	0AAH
P7	DATA	0F8H
SPCTL	DATA	0CEH
CF	BIT	0D8H.7
PWMCR	DATA	0F5H
CH	DATA	0F9H
P_SW1	DATA	0A2H
P_SW2	DATA	0BAH
EADC	BIT	0A8H.5
IE	DATA	0A8H
CL	DATA	0E9H
IAP_CMD	DATA	0C5H
CCAP0H	DATA	0FAH
CCAP1H	DATA	0FBH
CCAP2H	DATA	0FCH
ADC_RES	DATA	0BDH
CCAP0L	DATA	0EAH
CR	BIT	0D8H.6
PWMFDCR	DATA	0F7H
CCAP1L	DATA	0EBH
CCAPM0	DATA	0DAH
CCAP2L	DATA	0ECH
CCAPM1	DATA	0DBH
CCAPM2	DATA	0DCH
ES	BIT	0A8H.4
PADC	BIT	0B8H.5
IP	DATA	0B8H
RI	BIT	098H.0
CY	BIT	0D0H.7
TI	BIT	098H.1
CLK_DIV	DATA	097H
IAP_ADDRH	DATA	0C3H
PS	BIT	0B8H.4
SP	DATA	081H
CMOD	DATA	0D9H
CCON	DATA	0D8H
IAP_ADDRL	DATA	0C4H
PPCA	BIT	0B8H.7
OV	BIT	0D0H.2
CMPCR1	DATA	0E6H
CMPCR2	DATA	0E7H
ELVD	BIT	0A8H.6
P00	BIT	080H.0
ADC_CONTR	DATA	0BCH
SBUF	DATA	099H
PCON	DATA	087H
P10	BIT	090H.0
P01	BIT	080H.1
P20	BIT	0A0H.0
P11	BIT	090H.1
P02	BIT	080H.2
P30	BIT	0B0H.0
P21	BIT	0A0H.1
P12	BIT	090H.2
P03	BIT	080H.3
SCON	DATA	098H
P40	BIT	0C0H.0
P31	BIT	0B0H.1
P22	BIT	0A0H.2
P13	BIT	090H.3
P04	BIT	080H.4
TMOD	DATA	089H
TCON	DATA	088H
P50	BIT	0C8H.0
P41	BIT	0C0H.1
P32	BIT	0B0H.2
P23	BIT	0A0H.3
P14	BIT	090H.4
P05	BIT	080H.5
P60	BIT	0E8H.0
P51	BIT	0C8H.1
P42	BIT	0C0H.2
P33	BIT	0B0H.3
P24	BIT	0A0H.4
P15	BIT	090H.5
P06	BIT	080H.6
PLVD	BIT	0B8H.6
P70	BIT	0F8H.0
P61	BIT	0E8H.1
P52	BIT	0C8H.2
P43	BIT	0C0H.3
P34	BIT	0B0H.4
P25	BIT	0A0H.5
P16	BIT	090H.6
P07	BIT	080H.7
P71	BIT	0F8H.1
P62	BIT	0E8H.2
P53	BIT	0C8H.3
P44	BIT	0C0H.4
P35	BIT	0B0H.5
P26	BIT	0A0H.6
P17	BIT	090H.7
P72	BIT	0F8H.2
P63	BIT	0E8H.3
P54	BIT	0C8H.4
P45	BIT	0C0H.5
P36	BIT	0B0H.6
P27	BIT	0A0H.7
P73	BIT	0F8H.3
P64	BIT	0E8H.4
P55	BIT	0C8H.5
P46	BIT	0C0H.6
P37	BIT	0B0H.7
P74	BIT	0F8H.4
P65	BIT	0E8H.5
P56	BIT	0C8H.6
P47	BIT	0C0H.7
P75	BIT	0F8H.5
P66	BIT	0E8H.6
P57	BIT	0C8H.7
P76	BIT	0F8H.6
P67	BIT	0E8H.7
IE0	BIT	088H.1
BUS_SPEED	DATA	0A1H
P77	BIT	0F8H.7
IE1	BIT	088H.3
IE2	DATA	0AFH
AUXR	DATA	08EH
B	DATA	0F0H
IAP_CONTR	DATA	0C7H
PWMCFG	DATA	0F1H
ACC	DATA	0E0H
ET0	BIT	0A8H.1
TF0	BIT	088H.5
ET1	BIT	0A8H.3
TF1	BIT	088H.7
IP2	DATA	0B5H
RB8	BIT	098H.2
TH0	DATA	08CH
TH1	DATA	08DH
IT0	BIT	088H.0
EX0	BIT	0A8H.0
TB8	BIT	098H.3
T2H	DATA	0D6H
IT1	BIT	088H.2
EX1	BIT	0A8H.2
T3H	DATA	0D4H
P	BIT	0D0H.0
SM0	BIT	098H.7
T4H	DATA	0D2H
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
SM2	BIT	098H.5
T2L	DATA	0D7H
T3L	DATA	0D5H
T4L	DATA	0D3H
PT0	BIT	0B8H.1
PT1	BIT	0B8H.3
RS0	BIT	0D0H.3
IAP_DATA	DATA	0C2H
TR0	BIT	088H.4
RS1	BIT	0D0H.4
TR1	BIT	088H.6
WDT_CONTR	DATA	0C1H
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
PCA_PWM0	DATA	0F2H
PCA_PWM1	DATA	0F3H
PCA_PWM2	DATA	0F4H
P1ASF	DATA	09DH
DPH	DATA	083H
T3T4M	DATA	0D1H
T4T3M	DATA	0D1H
ADC_RESL	DATA	0BEH
DPL	DATA	082H
SPSTAT	DATA	0CDH
S2BUF	DATA	09BH
S3BUF	DATA	0ADH
S4BUF	DATA	085H
REN	BIT	098H.4
S2CON	DATA	09AH
S3CON	DATA	0ACH
S4CON	DATA	084H
SADEN	DATA	0B9H
SADDR	DATA	0A9H
IAP_TRIG	DATA	0C6H
AUXR1	DATA	0A2H
F0	BIT	0D0H.5
INT_CLKO	DATA	08FH
F1	BIT	0D0H.1
PSW	DATA	0D0H
CCF0	BIT	0D8H.0
CCF1	BIT	0D8H.1
SPDAT	DATA	0CFH
P0M0	DATA	094H
?PR?_DacA_write?BSP_TLC5620              SEGMENT CODE 
?DT?_DacA_write?BSP_TLC5620              SEGMENT DATA OVERLAYABLE 
?PR?_DacB_write?BSP_TLC5620              SEGMENT CODE 
?DT?_DacB_write?BSP_TLC5620              SEGMENT DATA OVERLAYABLE 
?PR?_DacC_write?BSP_TLC5620              SEGMENT CODE 
?DT?_DacC_write?BSP_TLC5620              SEGMENT DATA OVERLAYABLE 
?PR?_DacD_write?BSP_TLC5620              SEGMENT CODE 
?DT?_DacD_write?BSP_TLC5620              SEGMENT DATA OVERLAYABLE 
	EXTRN	CODE (nop?)
	PUBLIC	_DacD_write
	PUBLIC	_DacC_write
	PUBLIC	_DacB_write
	PUBLIC	_DacA_write

	RSEG  ?DT?_DacA_write?BSP_TLC5620
?_DacA_write?BYTE:
        num?040:   DS   1
	ORG  1
        rng?041:   DS   1

	RSEG  ?DT?_DacB_write?BSP_TLC5620
?_DacB_write?BYTE:
        num?142:   DS   1
	ORG  1
        rng?143:   DS   1

	RSEG  ?DT?_DacC_write?BSP_TLC5620
?_DacC_write?BYTE:
        num?244:   DS   1
	ORG  1
        rng?245:   DS   1

	RSEG  ?DT?_DacD_write?BSP_TLC5620
?_DacD_write?BYTE:
        num?346:   DS   1
	ORG  1
        rng?347:   DS   1
; #include "bsp_TLC5620.h"
; 
; 
; 
; 
; void	DacA_write(unsigned char num,unsigned char rng)

	RSEG  ?PR?_DacA_write?BSP_TLC5620
_DacA_write:
	USING	0
			; SOURCE LINE # 6
	MOV  	num?040,R7
	MOV  	rng?041,R5
; {
			; SOURCE LINE # 7
; 	__asm SETB P00
	 SETB P00
; 	__asm SETB P02
	 SETB P02
; 	__asm SETB P03
	 SETB P03
; 	
; 		
; 	__asm CLR P01
	 CLR P01
; 	__asm CLR P00
	 CLR P00
; 	nop();
			; SOURCE LINE # 15
	LCALL	nop?
; 	nop();
			; SOURCE LINE # 16
	LCALL	nop?
; 	__asm SETB P00
	 SETB P00
; 	nop();
			; SOURCE LINE # 18
	LCALL	nop?
; 	nop();
			; SOURCE LINE # 19
	LCALL	nop?
; 	__asm CLR P00
	 CLR P00
; 	if(rng==0)
			; SOURCE LINE # 21
	MOV  	A,rng?041
	JNZ  	?C0001
; 	{
			; SOURCE LINE # 22
; 		nop();
			; SOURCE LINE # 23
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 24
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 		nop();
			; SOURCE LINE # 26
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 27
	LCALL	nop?
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 29
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 30
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 32
	SJMP 	?C0002
?C0001:
; 	else
; 	{
			; SOURCE LINE # 34
; 		nop();
			; SOURCE LINE # 35
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 36
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 		nop();
			; SOURCE LINE # 38
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 39
	LCALL	nop?
; 		__asm SETB P01
	 SETB P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 42
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 43
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 45
?C0002:
; 	if(rng&0x80)
			; SOURCE LINE # 46
	MOV  	A,rng?041
	JNB  	ACC.7,?C0003
; 	{
			; SOURCE LINE # 47
; 		nop();
			; SOURCE LINE # 48
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 49
	LCALL	nop?
; 		__asm SETB P01
	 SETB P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 52
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 53
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 55
	SJMP 	?C0004
?C0003:
; 	else
; 	{
			; SOURCE LINE # 57
; 		nop();
			; SOURCE LINE # 58
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 59
	LCALL	nop?
; 		__asm CLR P01
	 CLR P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 62
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 63
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 65
?C0004:
; 	if(rng&0x40)
			; SOURCE LINE # 66
	MOV  	A,rng?041
	JNB  	ACC.6,?C0005
; 	{
			; SOURCE LINE # 67
; 		nop();
			; SOURCE LINE # 68
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 69
	LCALL	nop?
; 		__asm SETB P01
	 SETB P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 72
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 73
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 75
	SJMP 	?C0006
?C0005:
; 	else
; 	{
			; SOURCE LINE # 77
; 		nop();
			; SOURCE LINE # 78
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 79
	LCALL	nop?
; 		__asm CLR P01
	 CLR P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 82
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 83
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 85
?C0006:
; 	if(rng&0x20)
			; SOURCE LINE # 86
	MOV  	A,rng?041
	JNB  	ACC.5,?C0007
; 	{
			; SOURCE LINE # 87
; 		nop();
			; SOURCE LINE # 88
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 89
	LCALL	nop?
; 		__asm SETB P01
	 SETB P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 92
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 93
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 95
	SJMP 	?C0008
?C0007:
; 	else
; 	{
			; SOURCE LINE # 97
; 		nop();
			; SOURCE LINE # 98
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 99
	LCALL	nop?
; 		__asm CLR P01
	 CLR P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 102
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 103
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 105
?C0008:
; 	if(rng&0x10)
			; SOURCE LINE # 106
	MOV  	A,rng?041
	JNB  	ACC.4,?C0009
; 	{
			; SOURCE LINE # 107
; 		nop();
			; SOURCE LINE # 108
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 109
	LCALL	nop?
; 		__asm SETB P01
	 SETB P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 112
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 113
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 115
	SJMP 	?C0010
?C0009:
; 	else
; 	{
			; SOURCE LINE # 117
; 		nop();
			; SOURCE LINE # 118
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 119
	LCALL	nop?
; 		__asm CLR P01
	 CLR P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 122
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 123
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 125
?C0010:
; 	if(rng&0x08)
			; SOURCE LINE # 126
	MOV  	A,rng?041
	JNB  	ACC.3,?C0011
; 	{
			; SOURCE LINE # 127
; 		nop();
			; SOURCE LINE # 128
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 129
	LCALL	nop?
; 		__asm SETB P01
	 SETB P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 132
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 133
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 135
	SJMP 	?C0012
?C0011:
; 	else
; 	{
			; SOURCE LINE # 137
; 		nop();
			; SOURCE LINE # 138
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 139
	LCALL	nop?
; 		__asm CLR P01
	 CLR P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 142
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 143
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 145
?C0012:
; 	if(rng&0x04)
			; SOURCE LINE # 146
	MOV  	A,rng?041
	JNB  	ACC.2,?C0013
; 	{
			; SOURCE LINE # 147
; 		nop();
			; SOURCE LINE # 148
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 149
	LCALL	nop?
; 		__asm SETB P01
	 SETB P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 152
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 153
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 155
	SJMP 	?C0014
?C0013:
; 	else
; 	{
			; SOURCE LINE # 157
; 		nop();
			; SOURCE LINE # 158
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 159
	LCALL	nop?
; 		__asm CLR P01
	 CLR P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 162
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 163
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 165
?C0014:
; 	if(rng&0x02)
			; SOURCE LINE # 166
	MOV  	A,rng?041
	JNB  	ACC.1,?C0015
; 	{
			; SOURCE LINE # 167
; 		nop();
			; SOURCE LINE # 168
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 169
	LCALL	nop?
; 		__asm SETB P01
	 SETB P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 172
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 173
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 175
	SJMP 	?C0016
?C0015:
; 	else
; 	{
			; SOURCE LINE # 177
; 		nop();
			; SOURCE LINE # 178
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 179
	LCALL	nop?
; 		__asm CLR P01
	 CLR P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 182
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 183
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 185
?C0016:
; 	if(rng&0x01)
			; SOURCE LINE # 186
	MOV  	A,rng?041
	JNB  	ACC.0,?C0017
; 	{
			; SOURCE LINE # 187
; 		nop();
			; SOURCE LINE # 188
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 189
	LCALL	nop?
; 		__asm SETB P01
	 SETB P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 192
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 193
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 195
	SJMP 	?C0018
?C0017:
; 	else
; 	{
			; SOURCE LINE # 197
; 		nop();
			; SOURCE LINE # 198
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 199
	LCALL	nop?
; 		__asm CLR P01
	 CLR P01
; 		__asm CLR P00
	 CLR P00
; 		nop();
			; SOURCE LINE # 202
	LCALL	nop?
; 		nop();
			; SOURCE LINE # 203
	LCALL	nop?
; 		__asm SETB P00
	 SETB P00
; 	}
			; SOURCE LINE # 205
?C0018:
; 	__asm CLR P03
	 CLR P03
; 	__asm CLR P02
	 CLR P02
; 	nop();
			; SOURCE LINE # 208
	LCALL	nop?
; 	nop();
			; SOURCE LINE # 209
	LCALL	nop?
; 	__asm SETB P02
	 SETB P02
; 	__asm SETB P03
	 SETB P03
; 	nop();
			; SOURCE LINE # 212
	LCALL	nop?
; 	nop();
			; SOURCE LINE # 213
	LJMP 	nop?
; END OF _DacA_write

; }
; 
; void	DacB_write(unsigned char num,unsigned char rng)

	RSEG  ?PR?_DacB_write?BSP_TLC5620
_DacB_write:
			; SOURCE LINE # 216
	MOV  	num?142,R7
	MOV  	rng?143,R5
; {
			; SOURCE LINE # 217
; 	
; }
			; SOURCE LINE # 219
	RET  	
; END OF _DacB_write

; 
; void	DacC_write(unsigned char num,unsigned char rng)

	RSEG  ?PR?_DacC_write?BSP_TLC5620
_DacC_write:
			; SOURCE LINE # 221
	MOV  	num?244,R7
	MOV  	rng?245,R5
; {
			; SOURCE LINE # 222
; 	
; }
			; SOURCE LINE # 224
	RET  	
; END OF _DacC_write

; 
; void	DacD_write(unsigned char num,unsigned char rng)

	RSEG  ?PR?_DacD_write?BSP_TLC5620
_DacD_write:
			; SOURCE LINE # 226
	MOV  	num?346,R7
	MOV  	rng?347,R5
; {
			; SOURCE LINE # 227
; 	
; }
			; SOURCE LINE # 229
	RET  	
; END OF _DacD_write

	END
